version: '3.7'

services:
  zoo1:
    image: zookeeper:3.7.0
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
      - 2181:2181
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888;2181
    volumes:
      - ./zk/zoo1/data:/data
      - ./zk/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: kafka1
    volumes:
      - ./zk/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  kafkasr:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: kafkasr
    container_name: kafkasr
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - zoo1
      - kafka1
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka1:19092"
      SCHEMA_REGISTRY_HOST_NAME: kafkasr
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO

  restproxy:
    image: confluentinc/cp-kafka-rest:6.2.0
    hostname: krest
    container_name: krest
    restart: always
    ports:
      - 8082:8082
    depends_on:
      - zoo1
      - kafka1
      - kafkasr
    environment:
      KAFKA_REST_HOST_NAME: krest
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka1:19092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://kafkasr:8081'